# -*- coding: utf-8 -*-
"""Result.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1leuPwgyXtyGzlGDdIoJ504HjCaAKGetl
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df=pd.read_csv('/content/Test.csv')

df.info()

df.head(4)

df_cleaned_rows = df.dropna(axis=0, how='all')

df = pd.DataFrame(df)

from sklearn.model_selection import train_test_split

X1=['MA8391','AD8401',	'AD8402',	'AD8403',	'AD8001',	'AD8411',	'AD8412',	'AD8413',	'HS8461']
X=df[X1]
y=df['Result']

grade_mapping = {'O': 10, 'A+': 9, 'A': 8, 'B+': 7, 'B': 6, 'RA': 0,'U': 0}  # You may need to adjust this based on your grading system

# Apply the mapping to the DataFrame
X = X.applymap(lambda grade: grade_mapping.get(grade, grade))

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

model = LogisticRegression()

model.fit(X_train, y_train)

y_pred = model.predict(X_test)

accuracy = accuracy_score(y_test, y_pred)
conf_matrix = confusion_matrix(y_test, y_pred)
classification_rep = classification_report(y_test, y_pred)

print(f"Accuracy: {accuracy}")
print(f"Confusion Matrix:\n{conf_matrix}")
print(f"Classification Report:\n{classification_rep}")

Result = model.predict(X)

df_test=pd.read_csv('/content/Result1.csv')

grade_mapping = {'O': 10, 'A+': 9, 'A': 8, 'B+': 7,'b+' : 7, 'B': 6, 'RA': 0,'U': 0}  # You may need to adjust this based on your grading system

# Apply the mapping to the DataFrame
df_test = df_test.applymap(lambda grade: grade_mapping.get(grade, grade))

df_test['Result'] = model.predict(df_test)

df_test['Result']